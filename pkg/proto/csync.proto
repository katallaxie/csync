syntax = "proto3";

package proto;

option go_package = "github.com/katallaxie/csync/pkg/proto";

/// Provider ...
service Plugin {
    /// Backup ...
    rpc Backup(Backup.Request) returns (Backup.Response);
    /// Restore ...
    rpc Restore(Restore.Request) returns (Restore.Response);
    /// Link ....
    rpc Link(Link.Request) returns (Link.Response);
    /// Unlink ...
    rpc Unlink(Unlink.Request) returns (Unlink.Response);
}

/// Application is a container for the files to backup
/// that belong to an application.
message Application {
    /// Name of the application.
    string name             = 1;
    /// Files is the list of files that belong to the application.
    repeated string files   = 2;   
}

/// Backup ...
message Backup {
    enum Status {
        UNKNOWN = 0;
        SUCCESS = 1;
        FAILURE = 2;
    }

    /// Request ...
    message Request {
        string version           = 1;
        map<string, string> vars = 2;
        repeated string args     = 3;
        string file              = 4;

        Application app          = 5;

        bool dry                 = 10;
        bool force               = 11;
        bool root                = 12;
    }

    /// Response ...
    message Response {
        Status status           = 1;
        repeated Diagnostic diagnostic   = 2;
    }
}

/// Restore ...
message Restore {
    /// Status ...
    enum Status {
        UNKNOWN     = 0;
        SUCCESS     = 1;
        FAILURE     = 3;
    }

    /// Request ...
    message Request {
        string version              = 1;
        map<string, string> vars    = 2;
        repeated string args        = 3;
        string file                 = 4;

        Application app             = 5;

        bool dry                    = 10;
        bool force                  = 11;
        bool root                   = 12;
    }

    /// Response ...
    message Response {
        Status status           = 1;
        repeated Diagnostic diagnostic = 2;
    }
}

/// Link ...
message Link {
    /// Status ...
    enum Status {
        UNKNOWN     = 0;
        SUCCESS     = 1;
        FAILURE     = 3;
    }

    /// Request ...
    message Request {
        string version              = 1;
        map<string, string> vars    = 2;
        repeated string args        = 3;
        string file                 = 4;

        Application app             = 5;

        bool dry                    = 10;
        bool force                  = 11;
        bool root                   = 12;
    }

    /// Response ...
    message Response {
        Status status           = 1;
        repeated Diagnostic diagnostic = 2;
    }
}

/// Unlink ...
message Unlink {
    /// Status ...
    enum Status {
        UNKNOWN     = 0;
        SUCCESS     = 1;
        FAILURE     = 3;
    }

    /// Request ...
    message Request {
        string version              = 1;
        map<string, string> vars    = 2;
        repeated string args        = 3;
        string file                 = 4;

        Application app             = 5;

        bool dry                    = 10;
        bool force                  = 11;
        bool root                   = 12;
    }

    /// Response ...
    message Response {
        Status status           = 1;
        repeated Diagnostic diagnostic = 2;
    }
}

/// Diagnostic ...
message Diagnostic {
    enum Severity {
        INVALID     = 0;
        ERROR       = 1;
        WARNING     = 2;
    }

    Severity severity                = 1;
    string summary                   = 2;
    string detail                    = 3;
    repeated string FilePaths        = 4;
}

